{"version":3,"sources":["components/Navigationbar.js","components/Welcome.js","components/Footer.js","components/Current.js","components/Forecast.js","App.js","serviceWorker.js","index.js"],"names":["Navigationbar","Navbar","bg","variant","to","className","src","width","height","alt","Nav","Component","Welcome","Jumbotron","Footer","fullYear","Date","getFullYear","fixed","Container","Col","lg","Current","props","state","city","weather","cityChange","bind","submitCity","event","console","log","this","axios","get","params","location","then","response","data","setState","preventDefault","target","name","value","Card","Header","icon","faCloud","Form","onSubmit","id","Body","Row","Group","as","Label","Control","required","autoComplete","type","onChange","placeholder","style","Button","size","faSave","Table","striped","bordered","hover","length","align","colSpan","country","temp","main","description","Forecast","lat","lon","i","latChange","lonChange","responsive","Fragment","temp2","main2","description2","temp3","main3","description3","temp4","main4","description4","temp5","main5","description5","temp6","main6","description6","temp7","main7","description7","App","marginTop","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gSAGqBA,E,uKAIb,OAEI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACtB,kBAAC,IAAD,CAAMC,GAAI,GAAGC,UAAU,gBACnB,yBAAKC,IAAI,iDAAiDC,MAAM,KAAKC,OAAO,KAAKC,IAAI,UADzF,eAGJ,kBAACC,EAAA,EAAD,CAAKL,UAAU,WACf,kBAAC,IAAD,CAAMD,GAAI,UAAWC,UAAU,YAA/B,WACA,kBAAC,IAAD,CAAMD,GAAI,WAAYC,UAAU,YAAhC,kB,GAZ+BM,a,QCAtBC,E,uKAEb,OAEI,kBAACC,EAAA,EAAD,CAAWR,UAAU,sBACjB,sCACA,0G,GANqBM,aCAhBG,E,uKAEb,IAAIC,GAAW,IAAIC,MAAOC,cAE1B,OACI,kBAAChB,EAAA,EAAD,CAAQiB,MAAM,SAAShB,GAAG,OAAOC,QAAQ,QACrC,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIhB,UAAU,0BACnB,6BAAMU,EAAN,IAAiBA,EAAS,EAA1B,+C,GARYJ,a,iFCGfW,E,kDAEjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,KAAK,GACLC,QAAS,IAGb,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBARJ,E,uDAYPE,GAAQ,IAAD,OACdC,QAAQC,IAAI,QAAQC,KAAKT,MAAMC,MAE/BS,IAAMC,IAAI,yCAAyC,CAC/CC,OAAQ,CACJC,SAAUJ,KAAKT,MAAMC,QAG5Ba,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAACE,GACH,EAAKC,SAAS,CAACf,QAASc,OAE5BV,EAAMY,mB,iCAGCZ,GACPG,KAAKQ,SAAL,eACKX,EAAMa,OAAOC,KAAMd,EAAMa,OAAOE,U,+BAKrC,OACI,kBAACC,EAAA,EAAD,CAAMzC,UAAU,yCACZ,kBAACyC,EAAA,EAAKC,OAAN,KACI,kBAAC,IAAD,CAAiBC,KAAMC,MAD3B,oBAGA,kBAACC,EAAA,EAAD,CAAMC,SAAUlB,KAAKJ,WAAYuB,GAAG,cACpC,kBAACN,EAAA,EAAKO,KAAN,KACI,kBAACH,EAAA,EAAKI,IAAN,KACA,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,GAAIpC,KACZ,kBAAC8B,EAAA,EAAKO,MAAN,cACA,kBAACP,EAAA,EAAKQ,QAAN,CAAcC,UAAQ,EAACC,aAAa,MAChCC,KAAK,OACLjB,KAAK,OACLC,MAAOZ,KAAKT,MAAMC,KAClBqC,SAAU7B,KAAKN,WACftB,UAAU,qBACV0D,YAAY,kBAIpB,kBAACjB,EAAA,EAAKhC,OAAN,CAAakD,MAAO,CAAC,UAAY,UACjC,kBAACC,EAAA,EAAD,CAAQC,KAAK,KAAK/D,QAAQ,UAAU0D,KAAK,UACrC,kBAAC,IAAD,CAAiBb,KAAMmB,MAD3B,aAIA,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACpE,QAAQ,QAC9B,+BACI,4BACI,oCACA,uCACA,2CACA,oCACA,6CAGR,+BAC+B,IAA9B8B,KAAKT,MAAME,QAAQ8C,OAChB,wBAAIC,MAAM,UACN,wBAAIC,QAAQ,KAAZ,sCAEA,4BACI,4BACKzC,KAAKT,MAAME,QAAQD,MAExB,4BACKQ,KAAKT,MAAME,QAAQiD,SAExB,4BACK1C,KAAKT,MAAME,QAAQkD,KAAK,IAD7B,UAGA,4BACK3C,KAAKT,MAAME,QAAQmD,MAExB,4BACK5C,KAAKT,MAAME,QAAQoD,sB,GA1F3BnE,aCAhBoE,E,kDAEjB,WAAYxD,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAAEwD,IAAI,GAAIC,IAAI,GAAIvD,QAAQ,GAAIwD,EAAE,KAC7C,EAAKrD,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKuD,UAAY,EAAKA,UAAUvD,KAAf,gBACjB,EAAKwD,UAAY,EAAKA,UAAUxD,KAAf,gBALH,E,uDASPE,GAAQ,IAAD,OACdC,QAAQC,IAAI,OAAOC,KAAKT,MAAMyD,KAE9B/C,IAAMC,IAAI,0CAA0C,CAChDC,OAAQ,CACJ4C,IAAK/C,KAAKT,MAAMwD,IAChBC,IAAKhD,KAAKT,MAAMyD,OAGvB3C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAACE,GACH,EAAKC,SAAS,CAACf,QAASc,OAE5BV,EAAMY,mB,gCAGAZ,GACNG,KAAKQ,SAAL,eACKX,EAAMa,OAAOC,KAAMd,EAAMa,OAAOE,U,gCAI/Bf,GACNG,KAAKQ,SAAL,eACKX,EAAMa,OAAOC,KAAMd,EAAMa,OAAOE,U,+BAKrC,OACI,kBAACC,EAAA,EAAD,CAAMzC,UAAU,yCACZ,kBAACyC,EAAA,EAAKC,OAAN,KAAa,kBAAC,IAAD,CAAiBC,KAAMC,MAApC,qBACA,kBAACC,EAAA,EAAD,CAAMC,SAAUlB,KAAKJ,WAAYuB,GAAG,cAChC,kBAACN,EAAA,EAAKO,KAAN,KACA,kBAACH,EAAA,EAAKI,IAAN,KACA,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,GAAIpC,KACZ,kBAAC8B,EAAA,EAAKO,MAAN,iBACA,kBAACP,EAAA,EAAKQ,QAAN,CAAcC,UAAQ,EAACC,aAAa,MAChCC,KAAK,OACLjB,KAAK,MACLC,MAAOZ,KAAKT,MAAMwD,IAClBlB,SAAU7B,KAAKkD,UACf9E,UAAU,qBACV0D,YAAY,eAEpB,kBAACb,EAAA,EAAKK,MAAN,CAAYC,GAAIpC,KACZ,kBAAC8B,EAAA,EAAKO,MAAN,kBACI,kBAACP,EAAA,EAAKQ,QAAN,CAAcC,UAAQ,EAACC,aAAa,MACpCC,KAAK,OACLjB,KAAK,MACLC,MAAOZ,KAAKT,MAAMyD,IAClBnB,SAAU7B,KAAKmD,UACf/E,UAAU,qBACV0D,YAAY,iBAIpB,kBAACjB,EAAA,EAAKhC,OAAN,CAAakD,MAAO,CAAC,UAAY,UACjC,kBAACC,EAAA,EAAD,CAAQC,KAAK,KAAK/D,QAAQ,UAAU0D,KAAK,UACrC,kBAAC,IAAD,CAAiBb,KAAMmB,MAD3B,WAIA,kBAACrB,EAAA,EAAKC,OAAN,sCAA4Cd,KAAKT,MAAME,QAAQW,UAC/D,kBAAC+B,EAAA,EAAD,CAAOiB,YAAU,EAAChB,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACpE,QAAQ,OAAO+D,KAAK,MACrD,+BACI,4BACI,mCACA,2CACA,oCACA,6CAGR,+BAC+B,IAA9BjC,KAAKT,MAAME,QAAQ8C,OAChB,wBAAIC,MAAM,UACN,wBAAIC,QAAQ,KAAZ,wDAED,kBAAC,IAAMY,SAAP,KACC,4BACI,qCACA,4BACKrD,KAAKT,MAAME,QAAQkD,KAAK,IAD7B,UAGA,4BACK3C,KAAKT,MAAME,QAAQmD,MAExB,4BACK5C,KAAKT,MAAME,QAAQoD,cAG5B,4BACA,qCACI,4BACK7C,KAAKT,MAAME,QAAQ6D,MAAM,IAD9B,UAGA,4BACKtD,KAAKT,MAAME,QAAQ8D,OAExB,4BACKvD,KAAKT,MAAME,QAAQ+D,eAG5B,4BACI,qCACA,4BACKxD,KAAKT,MAAME,QAAQgE,MAAM,IAD9B,UAGA,4BACKzD,KAAKT,MAAME,QAAQiE,OAExB,4BACK1D,KAAKT,MAAME,QAAQkE,eAG5B,4BACI,qCACA,4BACK3D,KAAKT,MAAME,QAAQmE,MAAM,IAD9B,UAGA,4BACK5D,KAAKT,MAAME,QAAQoE,OAExB,4BACK7D,KAAKT,MAAME,QAAQqE,eAG5B,4BACI,qCACA,4BACK9D,KAAKT,MAAME,QAAQsE,MAAM,IAD9B,UAGA,4BACK/D,KAAKT,MAAME,QAAQuE,OAExB,4BACKhE,KAAKT,MAAME,QAAQwE,eAG5B,4BACI,qCACA,4BACKjE,KAAKT,MAAME,QAAQyE,MAAM,IAD9B,UAGA,4BACKlE,KAAKT,MAAME,QAAQ0E,OAExB,4BACKnE,KAAKT,MAAME,QAAQ2E,eAG5B,4BACI,qCACA,4BACKpE,KAAKT,MAAME,QAAQ4E,MAAM,IAD9B,UAGA,4BACKrE,KAAKT,MAAME,QAAQ6E,OAExB,4BACKtE,KAAKT,MAAME,QAAQ8E,wB,GA1K1B7F,a,OC6BvB8F,MA1Bf,WAME,OACA,kBAAC,IAAD,KACC,kBAAC,EAAD,MACA,kBAACtF,EAAA,EAAD,KACE,kBAACmC,EAAA,EAAD,KACE,kBAAClC,EAAA,EAAD,CAAKC,GAAI,GAAI2C,MAVA,CAChB0C,UAAU,SAUL,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWjG,IACjC,kBAAC,IAAD,CAAO+F,KAAK,WAAWC,OAAK,EAACC,UAAWvF,IACxC,kBAAC,IAAD,CAAOqF,KAAK,YAAYC,OAAK,EAACC,UAAW9B,QAMjD,kBAAC,EAAD,QClBiB+B,QACW,cAA7BC,OAAO1E,SAAS2E,UAEe,UAA7BD,OAAO1E,SAAS2E,UAEhBD,OAAO1E,SAAS2E,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnF,MAAK,SAAAoF,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9F,QAAQ8F,MAAMA,EAAMC,c","file":"static/js/main.155cdd16.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nexport default class Navigationbar extends Component{\n\n\n    render() {\n        return (\n\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Link to={\"\"}className=\"navbar-brand\">\n                    <img src=\"http://pngimg.com/uploads/sun/sun_PNG13449.png\" width=\"25\" height=\"25\" alt=\"brand\"/>Weather-API\n                </Link>\n            <Nav className=\"mr-auto\">\n            <Link to={\"current\"} className=\"nav-link\">Current</Link>\n            <Link to={\"forecast\"} className=\"nav-link\">Forecast</Link>\n            </Nav>\n           </Navbar>\n\n\n        );\n    }\n}\n","import React,{Component} from \"react\";\nimport {Jumbotron} from 'react-bootstrap';\n\nexport default class Welcome extends Component {\n    render() {\n        return (\n\n            <Jumbotron className=\"bg-dark text-white\">\n                <h1>Hello!</h1>\n                <p>\n                    This is a simple weather api which gives current and forecast weather.\n                </p>\n            </Jumbotron>\n\n        );\n    }\n}\n\n","import React,{Component} from 'react';\nimport { Container,Navbar,Col } from 'react-bootstrap';\n\nexport default class Footer extends Component {\n    render() {\n        let fullYear = new Date().getFullYear()\n\n        return (\n            <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <Col lg={12} className=\"text-center text-muted\">\n                        <div>{fullYear}-{fullYear+1}, All Rights Reserved by Raghav Gade</div>\n                    </Col>\n                    \n                </Container>\n\n\n\n\n            </Navbar>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport { Card,Form,Button,Col,Table  } from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCloud,faSave} from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\n\nexport default class Current extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            city:'',\n            weather: ''\n                \n            };\n        this.cityChange = this.cityChange.bind(this);\n        this.submitCity = this.submitCity.bind(this);\n    \n    }\n\n    submitCity(event) {\n        console.log(\"City=\",this.state.city);\n        \n        axios.get('http://localhost:8080/weather/current/',{\n            params: {\n                location: this.state.city\n            }\n        })\n        .then(response => response.data)\n        .then((data) => {\n            this.setState({weather: data})\n        })\n        event.preventDefault();\n    }\n\n    cityChange(event){\n        this.setState({\n            [event.target.name]:event.target.value\n        });\n    }\n    \n    render() {\n        return (\n            <Card className=\"border border-dark bg-dark text-white\">\n                <Card.Header>\n                    <FontAwesomeIcon icon={faCloud}/> Current Weather\n                </Card.Header> \n                <Form onSubmit={this.submitCity} id=\"cityFormId\"> \n                <Card.Body> \n                    <Form.Row>\n                    <Form.Group as={Col}>\n                        <Form.Label>City </Form.Label>\n                        <Form.Control required autoComplete=\"off\"\n                            type=\"text\" \n                            name=\"city\"\n                            value={this.state.city}\n                            onChange={this.cityChange}\n                            className=\"bg-dark text-white\"\n                            placeholder=\"Enter City\" />\n                    </Form.Group>\n                    </Form.Row>\n                    </Card.Body>\n                    <Card.Footer style={{\"textAlign\":\"right\"}}>\n                    <Button size=\"sm\" variant=\"success\" type=\"submit\">\n                        <FontAwesomeIcon icon={faSave}/>  Submit\n                    </Button>\n                    </Card.Footer>\n                    <Table striped bordered hover variant=\"dark\">\n                            <thead>\n                                <tr>\n                                    <th>City</th>\n                                    <th>Country</th>\n                                    <th>Temperature</th>\n                                    <th>Main</th>\n                                    <th>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.weather.length === 0 ?\n                                <tr align=\"center\">\n                                    <td colSpan=\"6\">Enter city to get weather details</td>\n                                </tr> : \n                                    <tr>\n                                        <td>\n                                            {this.state.weather.city}\n                                        </td>\n                                        <td>\n                                            {this.state.weather.country}\n                                        </td>\n                                        <td>\n                                            {this.state.weather.temp-273}&#8451;\n                                        </td>\n                                        <td>\n                                            {this.state.weather.main} \n                                        </td>\n                                        <td>\n                                            {this.state.weather.description} \n                                        </td>\n                                    </tr>\n                        }\n                        </tbody>\n                    </Table>\n                </Form>\n            </Card>\n\n\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport { Card,Form,Button,Col, Table } from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCloud,faSave} from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\n\nexport default class Forecast extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = { lat:'', lon:'', weather:[], i:'0' };\n        this.submitCity = this.submitCity.bind(this);\n        this.latChange = this.latChange.bind(this);\n        this.lonChange = this.lonChange.bind(this);\n    \n    }\n\n    submitCity(event) {\n        console.log(\"lon=\",this.state.lon);\n        \n        axios.get('http://localhost:8080/weather/forecast/',{\n            params: {\n                lat: this.state.lat,\n                lon: this.state.lon\n            }\n        })\n        .then(response => response.data)\n        .then((data) => {\n            this.setState({weather: data})\n        })\n        event.preventDefault();\n    }\n\n    latChange(event){\n        this.setState({\n            [event.target.name]:event.target.value\n        });\n    }\n    \n    lonChange(event){\n        this.setState({\n            [event.target.name]:event.target.value\n        });\n    }\n    \n    render() {\n        return (\n            <Card className=\"border border-dark bg-dark text-white\">\n                <Card.Header><FontAwesomeIcon icon={faCloud}/> Forecast Weather</Card.Header>\n                <Form onSubmit={this.submitCity} id=\"cityFormId\">\n                    <Card.Body>\n                    <Form.Row>\n                    <Form.Group as={Col}>\n                        <Form.Label>Latitude</Form.Label>\n                        <Form.Control required autoComplete=\"off\"\n                            type=\"text\"\n                            name=\"lat\"\n                            value={this.state.lat}\n                            onChange={this.latChange}\n                            className=\"bg-dark text-white\"\n                            placeholder=\"Enter lat\" />\n                    </Form.Group>\n                    <Form.Group as={Col}>\n                        <Form.Label>Longitude</Form.Label>\n                            <Form.Control required autoComplete=\"off\"\n                            type=\"text\"\n                            name=\"lon\"\n                            value={this.state.lon}\n                            onChange={this.lonChange}\n                            className=\"bg-dark text-white\"\n                            placeholder=\"Enter lon\" />\n                    </Form.Group>\n                    </Form.Row>\n                    </Card.Body>\n                    <Card.Footer style={{\"textAlign\":\"right\"}}>\n                    <Button size=\"sm\" variant=\"success\" type=\"submit\">\n                        <FontAwesomeIcon icon={faSave}/>Submit\n                    </Button>\n                    </Card.Footer>\n                    <Card.Header>Weather forecast (this week) :{this.state.weather.location}</Card.Header>\n                    <Table responsive striped bordered hover variant=\"dark\" size=\"sm\">\n                            <thead>\n                                <tr>\n                                    <th>Day</th>\n                                    <th>Temperature</th>\n                                    <th>Main</th>\n                                    <th>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.weather.length === 0 ?\n                                <tr align=\"center\">\n                                    <td colSpan=\"6\">Enter latitude and longitude to get weather details</td>\n                                </tr>\n                                 : <React.Fragment>\n                                    <tr>\n                                        <td>day 1</td>\n                                        <td>\n                                            {this.state.weather.temp-273}&#8451;\n                                        </td>\n                                        <td>\n                                            {this.state.weather.main} \n                                        </td>\n                                        <td>\n                                            {this.state.weather.description} \n                                        </td>\n                                    </tr>\n                                    <tr>\n                                    <td>day 2</td>\n                                        <td>\n                                            {this.state.weather.temp2-273}&#8451;\n                                        </td>\n                                        <td>\n                                            {this.state.weather.main2}\n                                        </td>\n                                        <td>\n                                            {this.state.weather.description2}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>day 3</td>\n                                        <td>\n                                            {this.state.weather.temp3-273}&#8451;\n                                        </td>\n                                        <td>\n                                            {this.state.weather.main3}\n                                        </td>\n                                        <td>\n                                            {this.state.weather.description3}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>day 4</td>\n                                        <td>\n                                            {this.state.weather.temp4-273}&#8451;\n                                        </td>\n                                        <td>\n                                            {this.state.weather.main4}\n                                        </td>\n                                        <td>\n                                            {this.state.weather.description4}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>day 5</td>\n                                        <td>\n                                            {this.state.weather.temp5-273}&#8451;\n                                        </td>\n                                        <td>\n                                            {this.state.weather.main5}\n                                        </td>\n                                        <td>\n                                            {this.state.weather.description5}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>day 6</td>\n                                        <td>\n                                            {this.state.weather.temp6-273}&#8451;\n                                        </td>\n                                        <td>\n                                            {this.state.weather.main6}\n                                        </td>\n                                        <td>\n                                            {this.state.weather.description6}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>day 7</td>\n                                        <td>\n                                            {this.state.weather.temp7-273}&#8451;\n                                        </td>\n                                        <td>\n                                            {this.state.weather.main7}\n                                        </td>\n                                        <td>\n                                            {this.state.weather.description7}\n                                        </td>\n                                    </tr>\n                                  \n                                </React.Fragment>\n                                    \n                        }\n                        </tbody>\n                    </Table>\n                    \n                </Form>\n            </Card>\n\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport {Container, Row,Col} from 'react-bootstrap';\nimport Navigationbar from \"./components/Navigationbar\";\nimport Welcome from \"./components/Welcome\";\nimport Footer from \"./components/Footer\";\nimport Current from \"./components/Current\";\nimport Forecast from \"./components/Forecast\";\nimport {BrowserRouter as Router , Switch , Route} from 'react-router-dom';\nfunction App() {\n  const marginTop = {\n    marginTop:\"20px\"\n  }\n\n\n  return (\n  <Router>\n   <Navigationbar/>\n   <Container>\n     <Row>\n       <Col lg={12} style={marginTop}>\n         <Switch>\n           <Route path=\"/\" exact component={Welcome}/>\n           <Route path=\"/current\" exact component={Current}/>\n           <Route path=\"/forecast\" exact component={Forecast}/>\n         </Switch>\n    </Col>\n     </Row>\n\n   </Container>\n   <Footer/>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}